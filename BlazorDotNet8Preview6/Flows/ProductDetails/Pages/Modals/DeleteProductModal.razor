@using Cypher.Components.DisplayEssentials;

<Modal @ref=modal ModalContentClass="container-bg-1 rounded-5 p-7">
    @if (string.IsNullOrEmpty(errorMessage))
    {
        <p class="mb-4">Are you sure you want to delete this product?</p>
        <div class="d-flex flex-row-reverse gap-4">
            <Button Variant="ButtonVariant.DangerPrimary" Disabled=isDeleting OnClick="() => Delete()">@(isDeleting ? "Deleting" : "Delete")</Button>
            <Button Variant="ButtonVariant.Secondary" OnClick="()=>modal.Close()">Cancel</Button>
        </div>
    }
    else
    {
        <p class="mb-4 fg-danger-1">@errorMessage</p>
        <div class="d-flex flex-row-reverse gap-4">
            <Button Variant="ButtonVariant.Secondary" OnClick="()=>Retry()">Retry</Button>
        </div>
    }   
</Modal>

@code {
    Modal modal;
    bool isDeleting;
    string? errorMessage;

    [Parameter]
    public Action OnDelete { get; set; }

    [CascadingParameter]
    public ProductDetailsState State{ get; set; }

    public void Open()
    {
        modal.Open();
        StateHasChanged();
    }

    async Task Delete()
    {
        isDeleting = true;
        StateHasChanged();

        var result = await State.Delete();
        if (result.IsSuccess)
        {
            modal.Close();
            OnDelete.Invoke();
        }
        else
        {
            errorMessage = result.Error.Message;
            isDeleting = false;
            StateHasChanged();
        }
    }

    void Retry()
    {
        errorMessage = null;
        StateHasChanged();
    }
}
